print(cve$cve$CVE_data_meta$ID)
print(parsed_json$CVE_Items$configurations$nodes)
for (node in cve$configurations$nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
}
extract_cpe <- function(nodes) {
print(nodes)
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
}
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
print(parsed_json$CVE_Items)
cve_ids <- list()
cpe_list <- list()
extract_cpe <- function(nodes) {
print(nodes)
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
}
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
print(parsed_json$CVE_Items$configurations$nodes)
for (node in cve$configurations$nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
}
cveid <- "CVE-2024-0056"
extracted_cpes <- extract_cpe(parsed_json$CVE_Items$configurations$nodes)
print(cpe_list)
View(node)
View(parsed_json)
View(cpe_list)
print(parsed_json$configurations$nodes)
print(cve$configurations)
print(cve$configurations$nodes)
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
print()
for (node in cve$configurations$nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
}
print(node)
for (node in cve$configurations$nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
extract_cpe(cve$configurations$nodes)
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
extract_cpe(cve$configurations$nodes)
}
for (cve in parsed_json$CVE_Items) {
# print(cve$cve$CVE_data_meta$ID)
extract_cpe(cve$configurations$nodes)
}
print(cve$configurations)
print(cve$configurations$nodes)
extract_cpe(cve$configurations$nodes)
for (cve in parsed_json$CVE_Items) {
# print(cve$cve$CVE_data_meta$ID)
print(cve$configurations$nodes)
extract_cpe(cve$configurations$nodes)
}
View(cpe_list)
for (cve in parsed_json$CVE_Items) {
# print(cve$cve$CVE_data_meta$ID)
print(cve$configurations$nodes)
extract_cpe(cve$configurations$nodes)
}
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
extract_cpe(cve$configurations$nodes)
}
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
extract_cpe(cve$configurations$nodes)
}
extract_cpe <- function(nodes) {
print(nodes)
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
}
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
extract_cpe(cve$configurations$nodes)
}
cpe_list <- list()
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
extract_cpe(cve$configurations$nodes)
}
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_ids <- list()
cpe_list <- list()
extract_cpe <- function(nodes) {
print(nodes)
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
}
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
cve_ids <<- c(cve_ids, cve$cve$CVE_data_meta$ID)
extract_cpe(cve$configurations$nodes)
}
print(cpe_list)
View(cve_ids)
View(parsed_json)
View(cpe_list)
extract_cpe_2 <- function(nodes, cve_id) {
for (node in nodes) {
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_uri <- cpe$cpe23Uri
# Add CPE to the relationship under the specific CVE ID
cve_cpe_relationship[[cve_id]] <- c(cve_cpe_relationship[[cve_id]], cpe_uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children, cve_id)  # Recursive call with current CVE ID
}
}
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
print(cve_id)  # Print the CVE ID
cve_cpe_relationship[[cve_id]] <- c()
extract_cpe_2(cve$configurations$nodes, cve_id)  # Extract CPEs for the current CVE ID
}
cve_cpe_relationship <- list()
extract_cpe_2 <- function(nodes, cve_id) {
for (node in nodes) {
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_uri <- cpe$cpe23Uri
# Add CPE to the relationship under the specific CVE ID
cve_cpe_relationship[[cve_id]] <- c(cve_cpe_relationship[[cve_id]], cpe_uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children, cve_id)  # Recursive call with current CVE ID
}
}
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
print(cve_id)  # Print the CVE ID
cve_cpe_relationship[[cve_id]] <- c()
extract_cpe_2(cve$configurations$nodes, cve_id)  # Extract CPEs for the current CVE ID
}
extract_cpe_2 <- function(nodes, cve_id) {
for (node in nodes) {
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_uri <- cpe$cpe23Uri
# Add CPE to the relationship under the specific CVE ID
cve_cpe_relationship[[cve_id]] <- c(cve_cpe_relationship[[cve_id]], cpe_uri)
}
}
if (!is.null(node$children)) {
extract_cpe_2(node$children, cve_id)  # Recursive call with current CVE ID
}
}
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
print(cve_id)  # Print the CVE ID
cve_cpe_relationship[[cve_id]] <- c()
extract_cpe_2(cve$configurations$nodes, cve_id)  # Extract CPEs for the current CVE ID
}
print(cve_cpe_relationship)
View(cve_cpe_relationship)
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
cve_ids <<- c(cve_ids, cve$cve$CVE_data_meta$ID)
cpes <- extract_cpe(cve$configurations$nodes)
print(cpes)
}
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_ids <- list()
cpe_list <- list()
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
cpe_list <- list()
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)  # Return the list of CPEs
}
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
cve_ids <<- c(cve_ids, cve$cve$CVE_data_meta$ID)
cpes <- extract_cpe(cve$configurations$nodes)
print(cpes)
}
print(cpe_list)
View(cpe_list)
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_ids <- list()
cpe_list <- list()
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)  # Return the list of CPEs
}
for (cve in parsed_json$CVE_Items) {
print(cve$cve$CVE_data_meta$ID)
cve_ids <<- c(cve_ids, cve$cve$CVE_data_meta$ID)
cpe_list <- list()
cpes <- extract_cpe(cve$configurations$nodes)
print(cpes)
}
print(cpe_list)
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_ids <- list()
cpe_list <- list()
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
cpe_list <- list()
cpes <- extract_cpe(cve$configurations$nodes)
}
print(cpe_list)
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_ids <- list()
cpe_list <- list()
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
cpe_list <- list()
cpes <- extract_cpe(cve$configurations$nodes)
}
print(cpe_list)
View(cpes)
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
cpe_list <- list()
cpes <- extract_cpe(cve$configurations$nodes)
cve_cpe_relationship[[cve_id]] <- cpes
}
print(cpe_list)
View(cve_cpe_relationship)
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
cpe_list <- list()
cpes <- extract_cpe(cve$configurations$nodes)
cve_cpe_relationship[[cve_id]] <- cpes
}
cve_cpe_df <- do.call(rbind, lapply(names(cve_cpe_relationship), function(cve_id) {
data.frame(CVE_ID = cve_id, CPE_URI = unlist(cve_cpe_relationship[[cve_id]]), stringsAsFactors = FALSE)
}))
write.csv(cve_cpe_df, "cve_cpe_relationship.csv", row.names = FALSE)
print("Exported CVE to CPE relationship to cve_cpe_relationship.csv")
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
cpe_list <- list()
cpes <- extract_cpe(cve$configurations$nodes)
cve_cpe_relationship[[cve_id]] <- cpes
}
cve_cpe_df <- do.call(rbind, lapply(names(cve_cpe_relationship), function(cve_id) {
data.frame(CVE_ID = cve_id, CPE_URI = unlist(cve_cpe_relationship[[cve_id]]), stringsAsFactors = FALSE)
}))
View(cve)
View(cve_cpe_relationship)
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
for (node in nodes) {
print(node)
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
cpe_list <- list()
cpes <- extract_cpe(cve$configurations$nodes)
cve_cpe_relationship[[cve_id]] <- cpes
}
cve_cpe_df <- do.call(rbind, lapply(names(cve_cpe_relationship), function(cve_id) {
cpes <- unlist(cve_cpe_relationship[[cve_id]])
if (length(cpes) > 0) {
data.frame(CVE_ID = cve_id, CPE_URI = cpes, stringsAsFactors = FALSE)
} else {
data.frame(CVE_ID = cve_id, CPE_URI = NA, stringsAsFactors = FALSE)
}
}))
write.csv(cve_cpe_df, "cve_cpe_relationship.csv", row.names = FALSE)
library(jsonlite)
json_data <- readLines("nvdcve-1.1-2024.json", warn = FALSE)
parsed_json <- fromJSON(paste(json_data, collapse = ""))
cve_cpe_relationship <- list()
extract_cpe <- function(nodes) {
for (node in nodes) {
if (!is.null(node$cpe_match)) {
for (cpe in node$cpe_match) {
cpe_list <<- c(cpe_list, cpe$cpe23Uri)
}
}
if (!is.null(node$children)) {
extract_cpe(node$children)
}
}
return(cpe_list)
}
for (cve in parsed_json$CVE_Items) {
cve_id <- cve$cve$CVE_data_meta$ID
cpe_list <- list()
cpes <- extract_cpe(cve$configurations$nodes)
cve_cpe_relationship[[cve_id]] <- cpes
}
cve_cpe_df <- do.call(rbind, lapply(names(cve_cpe_relationship), function(cve_id) {
cpes <- unlist(cve_cpe_relationship[[cve_id]])
if (length(cpes) > 0) {
data.frame(CVE_ID = cve_id, CPE_URI = cpes, stringsAsFactors = FALSE)
} else {
data.frame(CVE_ID = cve_id, CPE_URI = NA, stringsAsFactors = FALSE)
}
}))
write.csv(cve_cpe_df, "cve_cpe_relationship.csv", row.names = FALSE)
print("Exported CVE to CPE relationship to cve_cpe_relationship.csv")
