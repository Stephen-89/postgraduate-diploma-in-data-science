geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
head(cve_data)
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
View(vulnerabilities_that_fall_into_v3_score_ranges)
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
print(cve_data)
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
filter(!is.na(Base_Score))
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
print(cve_data)
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
print(cve_data)
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
View(vulnerabilities_that_fall_into_v3_score_ranges)
setwd("C:/Users/steph/Desktop/postgraduate-diploma-in-data-science/Modules/1. Exploratory Data Analysis & Management/2. R Programming")
data <- read.csv("basic_salary2.csv", header = T)
head(data)
# data <- read.csv("basic_salary2.csv", header = T)
data2 <- read.csv(file.choose(), header = T)
head(data2)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
view(data)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
view(data)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
data(data)
dim(data)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
mean(data$ba)
mean(data$ms)
View(data)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
#mean(data$ba)
#mean(data$ms)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
mode(data$ba)
mode(data$ms)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
#mean(data$ba)
#mean(data$ms)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
max(data$ba, na.rm = TRUE)
max(data$ms, na.rm = TRUE)
min(data$ba, na.rm = TRUE)
min(data$ms, na.rm = TRUE)
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
#mean(data$ba)
#mean(data$ms)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
max(data$ba, na.rm = TRUE)
max(data$ms, na.rm = TRUE)
min(data$ba, na.rm = TRUE)
min(data$ms, na.rm = TRUE)
View(data)
plot(data$ba,data$ms,col="red")
data <- read.csv("basic_salary2.csv", header = T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
# mean(data$ba)
# mean(data$ms)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
max(data$ba, na.rm = TRUE)
max(data$ms, na.rm = TRUE)
min(data$ba, na.rm = TRUE)
min(data$ms, na.rm = TRUE)
# plot(data$ba,data$ms,col="red")
names(data)
summary(data)
names(data)
summary(data)
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
summary(cve_data)
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
setwd("C:/Users/steph/Desktop/postgraduate-diploma-in-data-science/Modules/1. Exploratory Data Analysis & Management/2. R Programming/NVD-Vulnerabilities-Project-R")
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
summary(cve_data)
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
summary(cve_data)
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
print(summary(cve_data))
library(dplyr)
library(ggplot2)
library(lubridate)
vulnerabilities_that_fall_into_v3_score_ranges <- function(csv_file_path) {
cve_data <- read.csv(csv_file_path)
print(summary(cve_data))
cve_data$Base_Score <- as.numeric(cve_data$Base_Score)
cve_data <- cve_data %>%
mutate(Severity = case_when(
Base_Score >= 0.1 & Base_Score <= 3.9 ~ "Low",
Base_Score >= 4.0 & Base_Score <= 6.9 ~ "Medium",
Base_Score >= 7.0 & Base_Score <= 8.9 ~ "High",
Base_Score >= 9.0 & Base_Score <= 10.0 ~ "Critical",
is.na(Base_Score) | Base_Score <= 0.0 ~ "None",
TRUE ~ NA_character_
))
severity_counts <- cve_data %>%
group_by(Severity) %>%
summarise(Count = n()) %>%
arrange(factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")))
print(severity_counts)
ggplot(severity_counts, aes(x = factor(Severity, levels = c("Low", "Medium", "High", "Critical", "None")),
y = Count, fill = Severity)) +
geom_bar(stat = "identity", show.legend = TRUE) +
geom_text(aes(label = Count), vjust = -0.3) +
labs(title = "Vulnerabilities by Severity (CVSS v3)", x = "Severity", y = "Number of Vulnerabilities") +
theme_minimal() +
scale_fill_manual(values = c("None" = "grey", "Low" = "green", "Medium" = "yellow",
"High" = "orange", "Critical" = "red"))
}
vulnerabilities_that_fall_into_v3_score_ranges("vulnerability_data.csv")
setwd("C:/Users/steph/Desktop/postgraduate-diploma-in-data-science/Modules/1. Exploratory Data Analysis & Management/2. R Programming")
summary(data, stringsASFactors=TRUE)
data <- read.csv("basic_salary2.csv", header = T, stringsAsFactors=T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
# mean(data$ba)
# mean(data$ms)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
max(data$ba, na.rm = TRUE)
max(data$ms, na.rm = TRUE)
min(data$ba, na.rm = TRUE)
min(data$ms, na.rm = TRUE)
# plot(data$ba,data$ms,col="red")
names(data)
summary(data)
data <- read.csv("basic_salary2.csv", header = T, stringsAsFactors=T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
# mean(data$ba)
# mean(data$ms)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
max(data$ba, na.rm = TRUE)
max(data$ms, na.rm = TRUE)
min(data$ba, na.rm = TRUE)
min(data$ms, na.rm = TRUE)
# plot(data$ba,data$ms,col="red")
names(data)
summary(data)
history(max.show = 25)
savehistory(file="02-10-2024")
history(max.show = 25)
history(max.show=25)
savehistory(file="02-10-2024.txt")
savehistory(file="02-10-2024.txt", max.show=25)
history(max.show=25)
data2->sum(is.na(data$ba))
data2<-sum(is.na(data$ba))
data2<-sum(is.na(data$ba))
data2
data2<-sum(is.na(data$ba))
data2
data3 = na.omit(data2)
data3
data3 = na.omit(data2)
dim(data3)
data <- read.csv("basic_salary2.csv", header = T, stringsAsFactors=T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
# mean(data$ba)
# mean(data$ms)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
max(data$ba, na.rm = TRUE)
max(data$ms, na.rm = TRUE)
min(data$ba, na.rm = TRUE)
min(data$ms, na.rm = TRUE)
names(data)
summary(data)
history(max.show=25)
savehistory(file="02-10-2024.txt")
data2<-sum(is.na(data$ba))
data2
data3 = na.omit(data2)
dim(data3)
data3 = na.omit(data)
dim(data3)
sub<-data[(c3:7),]
sub<-data[c(3:7),]
sub
sub2<-data[c(2,3,4,5),c(8,9)]
data <- read.csv("basic_salary2.csv", header = T, stringsAsFactors=T)
# data2 <- read.csv(file.choose(), header = T)
head(data, 10)
tail(data, 10)
dim(data)
unique(data$Location)
str(data)
# mean(data$ba)
# mean(data$ms)
mean(data$ba, na.rm = TRUE)
mean(data$ms, na.rm = TRUE)
max(data$ba, na.rm = TRUE)
max(data$ms, na.rm = TRUE)
min(data$ba, na.rm = TRUE)
min(data$ms, na.rm = TRUE)
names(data)
summary(data)
history(max.show=25)
savehistory(file="02-10-2024.txt")
